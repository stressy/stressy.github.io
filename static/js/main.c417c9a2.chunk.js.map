{"version":3,"sources":["assets/images/cards/1C.png","assets/images/cards/2C.png","assets/images/cards/3C.png","assets/images/cards/4C.png","assets/images/cards/5C.png","assets/images/cards/6C.png","assets/images/cards/7C.png","assets/images/cards/8C.png","assets/images/cards/9C.png","assets/images/cards/10C.png","assets/images/cards/11C.png","assets/images/cards/12C.png","assets/images/cards/13C.png","assets/images/cards/1D.png","assets/images/cards/2D.png","assets/images/cards/3D.png","assets/images/cards/4D.png","assets/images/cards/5D.png","assets/images/cards/6D.png","assets/images/cards/7D.png","assets/images/cards/8D.png","assets/images/cards/9D.png","assets/images/cards/10D.png","assets/images/cards/11D.png","assets/images/cards/12D.png","assets/images/cards/13D.png","assets/images/cards/1H.png","assets/images/cards/2H.png","assets/images/cards/3H.png","assets/images/cards/4H.png","assets/images/cards/5H.png","assets/images/cards/6H.png","assets/images/cards/7H.png","assets/images/cards/8H.png","assets/images/cards/9H.png","assets/images/cards/10H.png","assets/images/cards/11H.png","assets/images/cards/12H.png","assets/images/cards/13H.png","assets/images/cards/1S.png","assets/images/cards/2S.png","assets/images/cards/3S.png","assets/images/cards/4S.png","assets/images/cards/5S.png","assets/images/cards/6S.png","assets/images/cards/7S.png","assets/images/cards/8S.png","assets/images/cards/9S.png","assets/images/cards/10S.png","assets/images/cards/11S.png","assets/images/cards/12S.png","assets/images/cards/13S.png","assets/images/cards/purple_back.png","arrays/cards.js","shared/handleDecks.js","shared/utils.js","reducers/deckSlice.js","shared/lock-1.js","views/stress/StressGame.js","views/stress/bot.js","index.js"],"names":["initialState","myDeck","yourDeck","mySlop","yourSlop","cards","score","player","enemy","play","paused","stress","draw","eventMsg","unknownCard","suits","card","color","index","src","Unknown","cn","deckArray","H1","H2","H3","H4","H5","H6","H7","H8","H9","H10","H11","H12","H13","D1","D2","D3","D4","D5","D6","D7","D8","D9","D10","D11","D12","D13","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","C11","C12","C13","S1","S2","S3","S4","S5","S6","S7","S8","S9","S10","S11","S12","S13","shuffle","a","tempDeck","i","length","randomCard","Math","floor","random","tempX","imgCache","__cache","read","this","Promise","resolve","img","Image","onload","then","loadCache","images","forEach","SuspenseImg","rest","alt","InformationStress","React","Component","className","onClick","props","handlePause","valueLabelFormat","value","marks","find","item","label","useStyles","makeStyles","customslider","width","display","CardMenu","botLevel","handleBotLevel","fullscreen","toggleFullScreen","classes","stressGame","Grid","container","spacing","xs","Slider","onChange","aria-labelledby","valueLabelDisplay","min","max","Stress","left","window","innerWidth","top","innerHeight","handleMyStress","style","stressReducer","state","action","type","target","map","x","lifted","slice","lock","setFullscreen","document","documentElement","requestFullscreen","catch","err","alert","console","log","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","screen","orientation","success","unlock","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","StressGame","useReducer","deck","dispatch","useState","liftedCard","setLiftedCard","setBotLevel","loading","setLoading","cancelled","useEffect","tempImgs","push","refresh","checkCards","result","tempCards","tempDeck1","tempDeck2","setTimeout","moveCard","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","handleStress","target1","target2","Number","found","temp","botAction","cardNr","getElementById","concat","replace","faked","getElementsByClassName","classList","remove","drop","e","preventDefault","removeFakedHover","substr","card1","card2","list","valid","gameOver","newDraw","msg","me","temp2","faked2","allowDrop","drag","MiddleCards","onDrop","onDragOver","marginTop","marginLeft","position","draggable","event","newValue","ReactDOM","render","exact","path","from","to"],"mappings":"6NAAe,G,MAAA,IAA0B,gCCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,gCCA1B,OAA0B,gCCA1B,OAA0B,gCCA1B,OAA0B,gCCA1B,OAA0B,wCCsD5BA,GAAe,CAC1BC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,MAAO,CAAEC,OAAQ,EAAGC,MAAO,GAC3BC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,SAAU,MA+ECC,GAAc,CACzBC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,MAAO,IACPC,IAAKC,GACLC,GAAI,cAEOC,GAAY,CACrB,CACEP,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKI,EACLF,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKK,EACLH,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKM,EACLJ,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKO,EACLL,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKQ,EACLN,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKS,EACLP,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKU,EACLR,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKW,EACLT,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,MACPC,MAAO,IACPC,IAAKY,EACLV,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAKa,EACLX,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAKc,EACLZ,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAKe,EACLb,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAKgB,EACLd,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKiB,EACLf,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKkB,EACLhB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKmB,EACLjB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKoB,EACLlB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKqB,EACLnB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKsB,EACLpB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKuB,EACLrB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKwB,EACLtB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,IACNC,MAAO,MACPC,MAAO,KACPC,IAAKyB,EACLvB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAK0B,EACLxB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAK2B,EACLzB,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAK4B,EACL1B,GAAI,cAEN,CACEN,MAAO,UACPC,KAAM,KACNC,MAAO,MACPC,MAAO,KACPC,IAAK6B,EACL3B,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK8B,EACL5B,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK+B,EACL7B,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKgC,EACL9B,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKiC,EACL/B,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKkC,EACLhC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKmC,EACLjC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKoC,EACLlC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKqC,EACLnC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKsC,EACLpC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKuC,EACLrC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKwC,EACLtC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKyC,EACLvC,GAAI,cAEN,CACEN,MAAO,OACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAK0C,EACLxC,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK2C,EACLzC,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK4C,EACL1C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK6C,EACL3C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK8C,EACL5C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAK+C,GACL7C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKgD,GACL9C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKiD,GACL/C,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKkD,GACLhD,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,IACNC,MAAO,QACPC,MAAO,KACPC,IAAKmD,GACLjD,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKoD,GACLlD,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKqD,GACLnD,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKsD,GACLpD,GAAI,cAEN,CACEN,MAAO,QACPC,KAAM,KACNC,MAAO,QACPC,MAAO,KACPC,IAAKuD,GACLrD,GAAI,e,0FCpjBGsD,GAAO,yCAAG,mCAAAC,EAAA,sDAInB,IAHIC,EADe,aACAvD,IAGVwD,EAAID,EAASE,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAC7CE,EAAaC,KAAKC,MAAMD,KAAKE,SAAWL,GACxCM,EAAQP,EAASC,GACjBD,EAASC,GAAKD,EAASG,GACvBH,EAASG,GAAcI,EARN,yBAUXP,GAVW,2CAAH,qDAadQ,GAAW,CACbC,QAAS,GACTC,KAFa,SAERpE,GAAM,IAAD,OAgBV,OAfKqE,KAAKF,QAAQnE,KACdqE,KAAKF,QAAQnE,GAAO,IAAIsE,SAAQ,SAACC,GACjC,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,OAAS,WACT,EAAKP,QAAQnE,IAAO,EACpBuE,EAAQ,EAAKJ,QAAQnE,KAEzBwE,EAAIxE,IAAMA,KACP2E,MAAK,SAACH,GACL,EAAKL,QAAQnE,IAAO,MAMrBqE,KAAKF,QAAQnE,KAIX4E,GAAY,SAACC,GAEtB,OADAA,EAAOC,SAAQ,SAACN,GAAD,OAASN,GAASE,KAAKI,OAC/B,GAGEO,GAAc,SAAC,GAAsB,IAApB/E,EAAmB,EAAnBA,IAAQgF,EAAW,wBAE7C,OADAd,GAASE,KAAKpE,GACP,8CAAKA,IAAKA,GAASgF,GAAnB,IAAyBC,IAAI,W,mECX3BC,IAtBwBC,IAAMC,UAsB3C,gKACE,WACE,OACE,sBAAKC,UAAU,SAASC,QAASjB,KAAKkB,MAAMC,YAA5C,SACE,wBAAMH,UAAU,aAAhB,UAA6B,8CAAoB,6CAAjD,2JAEI,wBAAM,wBAAM,gDAFhB,ofAII,wBAAM,wBAAM,2CAJhB,qFAMI,wBAAM,wBAAM,qDANhB,gGAQI,wBAAM,wBAAM,yCARhB,+KAUI,wBAAM,wBAAM,uCAVhB,gCAYI,wBAAM,6DACR,wBAAM,wBAbR,IAae,wBAAM,iCAjB7B,GAAuCF,IAAMC,YAuBfD,IAAMC,UAqCpC,SAASK,GAAiBC,GAExB,OADaC,GAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKH,QAAUA,KACnCI,MAGd,IAAMH,GAAQ,CACZ,CAAED,MAAO,EAAGI,MAAO,QACnB,CAAEJ,MAAO,EAAGI,MAAO,UACnB,CAAEJ,MAAO,EAAGI,MAAO,QACnB,CAAEJ,MAAO,EAAGI,MAAO,UAEfC,GAAYC,aAAW,CAC3BC,aAAc,CACRC,MAAO,IACPpG,MAAO,QACPqG,QAAS,kBAGJC,GAAW,SAACb,GAAW,IAC1Bc,EAA4Fd,EAA5Fc,SAAUC,EAAkFf,EAAlFe,eAAgBC,EAAkEhB,EAAlEgB,WAAYC,EAAsDjB,EAAtDiB,iBAAkBjH,EAAoCgG,EAApChG,OAAQiG,EAA4BD,EAA5BC,YAClEiB,GAD8FlB,EAAfmB,WACrEX,MAChB,OACE,uBAAKV,UAAU,WAAf,UAGE,sBAAKA,UAAWoB,EAAQR,aAAxB,SACE,gBAACU,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,GAAA,EAAD,CAAMd,MAAI,EAAV,SACE,eAAC,KAAD,MAEF,eAACc,GAAA,EAAD,CAAMd,MAAI,EAACiB,IAAE,EAAb,SACE,eAACC,GAAA,EAAD,CACErB,MAAOW,EACPW,SAAUV,EACVW,kBAAgB,oBAChBxB,iBAAkBA,GAClByB,kBAAkB,OAClBC,IAAK,EACLC,IAAK,EACLtH,MAAM,gBAGV,eAAC6G,GAAA,EAAD,CAAMd,MAAI,EAAV,SACE,eAAC,KAAD,WAIN,yBACA,yBAAQR,UAAWkB,EAAa,aAAe,GAAIjB,QAASkB,EAA5D,wBACA,yBAAQnB,UAAW9F,EAAS,uBAAyB,GAAI+F,QAASE,EAAlE,6BAuFsBL,IAAMC,UAwBND,IAAMC,UAxB3B,IAiDMiC,GAAb,gKACE,WACE,IAAMC,EAAOxD,KAAKE,UAAYuD,OAAOC,WAAa,KAC5CC,EAAM3D,KAAKE,UAAYuD,OAAOG,YAAc,KAClD,OACE,uCACE,sBAAKrC,UAAU,YAAYC,QAASjB,KAAKkB,MAAMoC,eAAgBC,MAAO,CAAEN,KAAMA,EAAO,KAAMG,IAAKA,EAAM,MAAtG,yBACA,sBAAKzH,IAAKL,GAAYK,IAAKqF,UAAU,oBAAoBJ,IAAI,SAC7D,sBAAKjF,IAAKL,GAAYK,IAAKqF,UAAU,qBAAqBJ,IAAI,SAC9D,sBAAKjF,IAAKL,GAAYK,IAAKqF,UAAU,uBAAuBJ,IAAI,SAChE,sBAAKjF,IAAKL,GAAYK,IAAKqF,UAAU,wBAAwBJ,IAAI,gBAVzE,GAA4BE,IAAMC,WCpRnB,SAASyC,KAA6C,IAA/BC,EAA8B,uDAAtBjJ,GAAckJ,EAAQ,uCAChE,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BACAF,GADP,IAEIhJ,OAAQiJ,EAAOjJ,OACfC,SAAUgJ,EAAOhJ,SACjBC,OAAQ,GACRC,SAAU,GACVC,MAAO6I,EAAO7I,MACdI,MAAM,EACNI,SAAU,KACVP,MAAO,CAACC,OAAQ0I,EAAM3I,MAAMC,OAAS2I,EAAO3I,OAAQC,MAAOyI,EAAM3I,MAAME,MAAQ0I,EAAO1I,SAE9F,IAAK,iBACD,OAAO,2BACAyI,GADP,IAEI9I,OAA0B,IAAlB+I,EAAOE,OAAP,uBAA0BH,EAAM9I,QAAhC,CAAwC8I,EAAM5I,MAAM6I,EAAOE,UAA3D,aAA0EH,EAAM9I,QACxFC,SAA4B,IAAlB8I,EAAOE,OAAP,uBAA0BH,EAAM7I,UAAhC,CAA0C6I,EAAM5I,MAAM6I,EAAOE,UAA7D,aAA4EH,EAAM7I,UAC5FC,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAIA,IAAMJ,EAAOK,OACNN,EAAMhJ,OAAO,GACbqJ,IAAMJ,EAAOE,OACbH,EAAM5I,MAAM6I,EAAOK,QAEnBvC,KAGf/G,OAAQgJ,EAAMhJ,OAAOuJ,MAAM,KAEnC,IAAK,mBACD,OAAO,2BACAP,GADP,IAEI9I,OAA0B,IAAlB+I,EAAOE,OAAP,uBAA0BH,EAAM9I,QAAhC,CAAwC8I,EAAM5I,MAAM6I,EAAOE,UAA3D,aAA0EH,EAAM9I,QACxFC,SAA4B,IAAlB8I,EAAOE,OAAP,uBAA0BH,EAAM7I,UAAhC,CAA0C6I,EAAM5I,MAAM6I,EAAOE,UAA7D,aAA4EH,EAAM7I,UAC5FC,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAIA,IAAMJ,EAAOK,OACNN,EAAM/I,SAAS,GACfoJ,IAAMJ,EAAOE,OACbH,EAAM5I,MAAM6I,EAAOK,QAEnBvC,KAGf9G,SAAU+I,EAAM/I,SAASsJ,MAAM,KAEvC,IAAK,eACD,OAAO,2BACAP,GADP,IAEI9I,OAAQ8I,EAAM5I,MAAM,GAAZ,uBAAqB4I,EAAM9I,QAA3B,CAAmC8I,EAAM5I,MAAM,KAA/C,aAAyD4I,EAAM9I,QACvEC,SAAU6I,EAAM5I,MAAM,GAAZ,uBAAqB4I,EAAM7I,UAA3B,CAAqC6I,EAAM5I,MAAM,KAAjD,aAA2D4I,EAAM7I,UAC3EC,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAU,IAANA,EACKL,EAAM/I,SAAS,GACZ,IAANoJ,EACKL,EAAMhJ,OAAO,GAEf+G,KAGbpG,MAAM,EACNC,SAAU,OAElB,IAAK,gBACD,OAAO,2BACAoI,GADP,IAEI/I,SAAS,GAAD,oBAAM+I,EAAM/I,UAAZ,aAAyB+I,EAAM9I,QAA/B,aAA0C8I,EAAM7I,UAAhD,CAA0D6I,EAAM5I,MAAM,GAAI4I,EAAM5I,MAAM,KAC9FF,OAAQ,GACRC,SAAU,GACVO,QAAQ,EACRF,MAAM,EACNJ,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAU,IAANA,GAAiB,IAANA,EACN,KAEAtC,OAIrB,IAAK,kBACD,OAAO,2BACAiC,GADP,IAEIhJ,OAAO,GAAD,oBAAMgJ,EAAMhJ,QAAZ,aAAuBgJ,EAAM9I,QAA7B,aAAwC8I,EAAM7I,UAA9C,CAAwD6I,EAAM5I,MAAM,GAAI4I,EAAM5I,MAAM,KAC1FF,OAAQ,GACRC,SAAU,GACVO,QAAQ,EACRF,MAAM,EACNJ,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAU,IAANA,GAAiB,IAANA,EACN,KAEAtC,OAIrB,IAAK,mBACD,OAAO,2BACAiC,GADP,IAEIvI,QAASuI,EAAMvI,SAEvB,IAAK,iBACD,OAAO,2BACAuI,GADP,IAEItI,OAAQuI,EAAOvI,SAEvB,IAAK,mBACD,OAAO,2BACAsI,GADP,IAEIxI,MAAM,EACNI,SAAUqI,EAAOrI,WAEzB,IAAK,YACD,OAAO,2BACAoI,GADP,IAEIxI,MAAM,EACNG,MAAM,EACNX,OAAQgJ,EAAMhJ,OAAOuJ,MAAM,GAC3BtJ,SAAU+I,EAAM/I,SAASsJ,MAAM,KAEvC,IAAK,kBACD,OAAO,2BACAP,GADP,IAEI5I,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAIA,IAAMJ,EAAOlI,KACNiI,EAAMhJ,OAAO,GAEf+G,KAGb/G,OAAQgJ,EAAMhJ,OAAOuJ,MAAM,KAEnC,IAAK,oBACD,OAAO,2BACAP,GADP,IAEI5I,MAAO4I,EAAM5I,MAAMgJ,KAAI,SAACrC,EAAMsC,GAC1B,OAAIA,IAAMJ,EAAOlI,KACNiI,EAAM/I,SAAS,GAEf8G,KAGf9G,SAAU+I,EAAM/I,SAASsJ,MAAM,KAEvC,QACI,OAAOP,GCnJZ,SAASQ,GAAMC,GAElB,GAAIC,SAASC,gBAAgBC,kBACzB,IACIF,SAASC,gBAAgBC,oBACzBH,GAAc,GAChB,SACEC,SAASC,gBAAgBC,oBAAoB/D,MAAK,WAC9C4D,GAAc,MACfI,OAAM,SAACC,GACNC,MAAM,8CACNC,QAAQC,IAAIH,WAGbJ,SAASC,gBAAgBO,sBAChCR,SAASC,gBAAgBO,uBACzBT,GAAc,IACPC,SAASC,gBAAgBQ,yBAChCV,GAAc,GACdC,SAASC,gBAAgBQ,2BAClBT,SAASC,gBAAgBS,qBAChCV,SAASC,gBAAgBS,sBACzBX,GAAc,IAEdM,MAAM,8CAGVtB,OAAO4B,OAAOC,YAAYd,KAAK,YAAY3D,MAAK,SAAC0E,GAC7CP,QAAQC,IAAIM,MACbV,OAAM,SAACC,GACNE,QAAQC,IAAIH,MAIX,SAASU,GAAQf,GAEtBhB,OAAO4B,OAAOC,YAAYE,SAGtBd,SAASe,gBACThB,GAAc,GACdC,SAASe,kBACFf,SAASgB,sBAChBjB,GAAc,GACdC,SAASgB,wBACFhB,SAASiB,qBAChBlB,GAAc,GACdC,SAASiB,uBACFjB,SAASkB,mBAChBnB,GAAc,GACdC,SAASkB,oBCwVFC,OAhYf,WAAuB,IAAD,EACKxE,IAAMyE,WAAW/B,GAAehJ,IADrC,mBACbgL,EADa,KACPC,EADO,OAEgB3E,IAAM4E,SAAS,MAF/B,mBAEbC,EAFa,KAEDC,EAFC,OAGY9E,IAAM4E,SAAS,GAH3B,mBAGb1D,EAHa,KAGH6D,EAHG,OAIU/E,IAAM4E,SAAS,MAJzB,mBAIbI,EAJa,KAIJC,EAJI,OAKgBjF,IAAM4E,UAAS,GAL/B,mBAKbxD,EALa,KAKDgC,EALC,KAOhB8B,GAAY,EAEhBlF,IAAMmF,WAAU,WAWd,IAAMC,EAAWpK,GAAU+H,KAAI,SAACrC,GAC9B,OACEA,EAAK7F,OAUT,OAPAuK,EAASC,KAAK7K,GAAYK,KAC1B4E,GAAU2F,GACVE,EAAQ,EAAE,GAKH,WACLJ,GAAY,KAKb,IASHlF,IAAMmF,WAAU,WACVD,IACAR,EAAKvK,MAASuK,EAAKrK,QAAWqK,EAAKpK,MAASoK,EAAKnK,UACnDgL,EAAWb,EAAK3K,UAgBpB,IAAMuL,EAAU,SAACrL,EAAQC,GACvBmE,KAAUmB,MAAK,SAACgG,GACd,IAAIN,EAAJ,CACA,IAAIO,EAAY,CAACjL,GAAaA,GAAaA,GAAa,KAAM,KAAMA,GAAaA,GAAaA,IAC1FkL,EAAYF,EAAOtC,MAAM,EAAG,IAC5ByC,EAAYH,EAAOtC,MAAM,GAAG,IAChCyB,EAAS,CAAE9B,KAAM,eAAgBlJ,OAAQ+L,EAAW9L,SAAU+L,EAAW5L,MAAO0L,EAAWxL,OAAQA,EAAQC,MAAOA,QACjHsF,MAAK,WACF0F,IACJD,EAAW,GACXW,YAAW,WACT,IADgB,IAAD,cAEH,IAANpH,IACFA,EAAI,GAENoH,YAAW,WACTC,EAASrH,EAAGA,EAAI,EAAI,aAAe,eAAgB,MAC9C,IAAJA,GAPU,KACNA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAQToH,YAAW,WACTX,EAAW,KACV,QACF,WChGkB,SAACa,EAAUC,GACpC,IAAMC,EAAgBhG,IAAMiG,SAG5BjG,IAAMmF,WAAU,WACda,EAAcE,QAAUJ,IACvB,CAACA,IAGJ9F,IAAMmF,WAAU,WAId,GAAc,OAAVY,EAAgB,CAClB,IAAII,EAAKC,aAJX,WACEJ,EAAcE,YAGaH,GAC3B,OAAO,kBAAMM,cAAcF,OAE5B,CAACJ,IDmFJO,EAAY,WACN5B,EAAKvK,OAASuK,EAAKtK,SAAWsK,EAAKpK,OAASoK,EAAKnK,UAAYmK,EAAK3K,MAAM,IAAM2K,EAAK3K,MAAM,ICjFxE,SAACA,EAAO8L,EAAUU,GACzC,IAAIC,EAAU,KACVC,EAAU,KAGd,GAFI1M,EAAM,KAAIyM,EAAUE,OAAO3M,EAAM,GAAGW,OACpCX,EAAM,KAAI0M,EAAUC,OAAO3M,EAAM,GAAGW,OACxB,OAAZ8L,EACJ,GAAIA,IAAYC,EACdb,YAAW,WACTW,GAAa,KACZ,SACE,CAEL,IADA,IAAII,EACKnI,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAKzE,EAAMyE,GAAX,CACA,IAAIoI,EAAOF,OAAO3M,EAAMyE,GAAG9D,MAC3B,GAAIkM,EAAO,IAAMJ,GAAWI,EAAO,IAAMJ,GAAqB,IAATI,GAA0B,KAAZJ,GAA6B,KAATI,GAA2B,IAAZJ,EAAgB,CACpHG,EAAQ,EACR,MACK,GAAIC,EAAO,IAAMH,GAAWG,EAAO,IAAMH,GAAqB,IAATG,GAA0B,KAAZH,GAA6B,KAATG,GAA2B,IAAZH,EAAgB,CAC3HE,EAAQ,EACR,OAGAA,GACFd,EAASrH,EAAG,cAAemI,ID0D3BE,CAAUnC,EAAK3K,MAAO8L,EAAUU,KAEpB,IAAbrF,EAAiB,IAAoB,IAAbA,EAAiB,KAAoB,IAAbA,EAAiB,KAAoB,IAAbA,EAAiB,KAAO,MAEnG,IAAM2E,EAAW,SAACiB,EAAQjE,EAAMC,GAC9Ba,QAAQC,IAAI,YACZe,EAAS,CAAE9B,KAAM,QAAUA,EAAMI,OAAQ6D,EAAQhE,OAAQA,EAAQpI,KAAMoM,IACvE,IAAMF,EAAOvD,SAAS0D,eAAe,QAAUD,GAC3CF,IACFA,EAAK1G,UAAY0G,EAAK1G,UAAU8G,OAAO,SAAWF,GAAQG,QAAQ,YAAY,KAEhFrB,YAAW,WACT,IAAMsB,EAAQ7D,SAAS8D,uBAAuB,QAAUL,GACxD,GAAII,GAASA,EAAM,GACjB,KAAMA,EAAMzI,OAAS,GACnByI,EAAM,GAAGE,UAAUC,OAAO,QAAUP,KAGvC,KAGCQ,EAAO,SAACC,GAKZ,GAHA5D,QAAQC,IAAI,QACZ2D,EAAEC,iBACFC,IACK5C,GAAeH,EAAKvK,KAAzB,CACA,IAAI8I,EAASyB,EAAK3K,MAAM8K,EAAW6C,OAAO,EAAG,IACzC5E,EAAS4B,EAAK3K,MAAMwN,EAAEzE,OAAOqD,GAAGuB,OAAO,EAAG,IAC9C,GAAK5E,EAAL,CACA,IAAI6E,EAAQjB,OAAOzD,EAAOvI,MACtBkN,EAAQlB,OAAO5D,EAAOpI,OACtBiN,EAAQ,IAAMC,GAASD,EAAQ,IAAMC,GAAoB,IAAVD,GAAyB,KAAVC,GAA4B,KAAVD,GAA0B,IAAVC,IAClG/B,EAASa,OAAO7B,EAAW6C,OAAO,EAAG,IAAK,YAAahB,OAAOa,EAAEzE,OAAOqD,GAAGuB,OAAO,EAAG,QAIlFnC,EAAa,SAACsC,GAYlB,GAAKA,EAAK,IAAOA,EAAK,GAAtB,CACA,IAAIrB,EAAUE,OAAOmB,EAAK,GAAGnN,OAAS,KAClC+L,EAAUC,OAAOmB,EAAK,GAAGnN,OAAS,KAKtC,GAAI8L,IAAYC,GAAqC,OAA1BD,EAA3B,CAIW9B,EAAKrK,QACdsK,EAAS,CAAE9B,KAAM,iBAAkBxI,QAAQ,IAG7C,IADA,IAAIyN,GAAQ,EACHtJ,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAU,IAANA,GAAiB,IAANA,GAAYqJ,EAAKrJ,GAAhC,CACA,IAAI9D,EAAOgM,OAAOmB,EAAKrJ,GAAG9D,MAE1B,GAAIA,EAAO,IAAM8L,GACZ9L,EAAO,IAAM8L,GACb9L,EAAO,IAAM+L,GACb/L,EAAO,IAAM+L,GACH,IAAT/L,IAA2B,KAAZ8L,GAA8B,KAAZC,IACxB,KAAT/L,IAA4B,IAAZ8L,GAA6B,IAAZC,GACvC,CAEEqB,GAAQ,EACR,OAGCD,EAAK,IAAOA,EAAK,IAAOA,EAAK,GAGtBA,EAAK,IAAOA,EAAK,IAAOA,EAAK,IAEvCE,EAAS,YAAa,CAAC9N,OAAQ,EAAGC,MAAO,IAHzC6N,EAAS,UAAW,CAAC9N,OAAQ,EAAGC,MAAO,IAKpC4N,IACCpD,EAAK/K,OAAO8E,OAAS,GAAKiG,EAAK9K,SAAS6E,OAAS,EAEnDsJ,EAAS,OAAQ,CAAC9N,OAAQ,EAAGC,MAAO,IAC3BwK,EAAK/K,OAAO8E,OAAS,EAE9BsJ,EAAS,UAAW,CAAC9N,OAAQ,EAAGC,MAAO,IAC9BwK,EAAK9K,SAAS6E,OAAS,EAEhCsJ,EAAS,YAAa,CAAC9N,OAAQ,EAAGC,MAAO,IAGzC8N,EAAQ,wBAzCVrD,EAAS,CAAE9B,KAAM,iBAAkBxI,QAAQ,MA8CzC0N,EAAW,SAACE,EAAKjO,GACjB0K,EAAKnK,WACToK,EAAS,CAAE9B,KAAM,mBAAoBtI,SAAU0N,IAC/CrC,YAAW,WACT,IAAK,IAAIpH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAChB,IAANA,IAASA,EAAI,GACjB,IAAMoI,EAAOvD,SAAS0D,eAAe,QAAUvI,GAC3CoI,IACFA,EAAK1G,UAAY0G,EAAK1G,UAAU8G,OAAO,eAG3C1B,EAAQtL,EAAMC,OAAQD,EAAME,SAC3B,OAGCqM,EAAe,SAAC2B,GACfxD,EAAKrK,QAAWqK,EAAKvK,OACtB+N,GACFvD,EAAS,CAAE9B,KAAM,kBACjBmF,EAAQ,aAERrD,EAAS,CAAE9B,KAAM,oBACjBmF,EAAQ,WAINA,EAAU,SAACC,GACftD,EAAS,CAAE9B,KAAM,mBAAoBtI,SAAU0N,IAC/CrC,YAAW,WACTjB,EAAS,CAAE9B,KAAM,iBACjB+C,YAAW,WACTjB,EAAS,CAAE9B,KAAM,cACjB,IAAM+D,EAAOvD,SAAS0D,eAAe,YAC/BoB,EAAQ9E,SAAS0D,eAAe,YAClCH,IACFA,EAAK1G,UAAY0G,EAAK1G,UAAU8G,OAAO,YAErCmB,IACFA,EAAMjI,UAAYiI,EAAMjI,UAAU8G,OAAO,YAE3CpB,YAAW,WACT,IAAMsB,EAAQ7D,SAAS8D,uBAAuB,UACxCiB,EAAS/E,SAAS8D,uBAAuB,UAC/C,GAAID,GAASA,EAAM,GACjB,KAAMA,EAAMzI,OAAS,GACnByI,EAAM,GAAGE,UAAUC,OAAO,UAG9B,GAAIe,GAAUA,EAAO,GACnB,KAAMA,EAAO3J,OAAS,GACpB2J,EAAO,GAAGhB,UAAUC,OAAO,YAG9B,OACF,QACF,MAGChH,EAAc,WAClBsE,EAAS,CAAE9B,KAAM,sBAKbwF,EAAY,SAACd,GACjBA,EAAEC,kBAEEC,EAAmB,WACvB9D,QAAQC,IAAI,mBACZkB,EAAc,MACd,IAAMoC,EAAQ7D,SAAS8D,uBAAuB,cAC9C,GAAID,GAASA,EAAM,GACjB,KAAMA,EAAMzI,OAAS,GACnByI,EAAM,GAAGE,UAAUC,OAAO,eAI1BiB,EAAO,SAACf,GACZ5D,QAAQC,IAAI,QACZ6D,IACIF,EAAEzE,OAAOqD,KAAOtB,IAClB0C,EAAEzE,OAAO5C,UAAYqH,EAAEzE,OAAO5C,UAAU8G,OAAO,eAC/ClC,EAAcyC,EAAEzE,OAAOqD,MAY3B,SAASoC,IACP,IAAM3B,EAAOlC,EACb,OACE,uCACE,uBAAKyB,GAAG,WAAWjG,UAAU,sBAAsBsI,OAAQlB,EAAMmB,WAAYJ,EAAWlI,QAASmH,EAAjG,UACGV,EAAK9M,SAAS2E,OAAS,EAAImI,EAAK9M,SAASiJ,KAAI,SAACrC,EAAMlC,GACjD,OAAO,eAAC,GAAD,CAAa3D,IAAKL,GAAYK,IAA2BqF,UAAU,WAAWuC,MAAO,CAACiG,UAAW,IAAW,EAAJlK,EAAS,KAAMmK,WAAY,IAAMnK,EAAI,KAAKoK,SAAU,YAAa9I,IAAI,OAAO+I,UAAU,SAAtJ,YAAcrK,MAE7D,GACHoI,EAAK7M,MAAM,KAAO6M,EAAKzM,MAAQyM,EAAKrM,UACnC,eAAC,GAAD,CAAa4L,GAAG,WAAWtL,IAAK+L,EAAK7M,MAAM,GAAGc,IAAKqF,UAAU,gBAAgBuC,MAAO,CAACiG,UAAW,IAA8B,EAAvB9B,EAAK9M,SAAS2E,OAAc,KAAMkK,WAAY,IAAM/B,EAAK9M,SAAS2E,OAAS,MAAOqB,IAAI,OAAO+I,UAAU,UAC5M,MAEN,uBAAK1C,GAAG,WAAWjG,UAAU,sBAAsBsI,OAAQlB,EAAMmB,WAAYJ,EAAWlI,QAASmH,EAAjG,UACGV,EAAK/M,OAAO4E,OAAS,EAAImI,EAAK/M,OAAOkJ,KAAI,SAACrC,EAAMlC,GAC7C,OAAQ,eAAC,GAAD,CAAa3D,IAAKL,GAAYK,IAAyBqF,UAAU,WAAWuC,MAAO,CAACiG,UAAW,IAAW,EAAJlK,EAAS,KAAMmK,WAAY,IAAMnK,EAAI,KAAKoK,SAAU,YAAa9I,IAAI,OAAO+I,UAAU,SAApJ,UAAYrK,MAE5D,GACHoI,EAAK7M,MAAM,KAAO6M,EAAKzM,MAAQyM,EAAKrM,UACnC,eAAC,GAAD,CAAa4L,GAAG,WAAWtL,IAAK+L,EAAK7M,MAAM,GAAGc,IAAKqF,UAAU,gBAAgBuC,MAAO,CAACiG,UAAW,IAA4B,EAArB9B,EAAK/M,OAAO4E,OAAc,KAAMkK,WAAY,IAAM/B,EAAK/M,OAAO4E,OAAS,MAAOqB,IAAI,OAAO+I,UAAU,UACxM,SAKZ,OAAI3D,EAAkB,KAEpB,sBAAKhF,UAAU,YAAf,SACI8E,EAAe,uCACfN,EAAKrK,OAAS,eAAC,GAAD,CAAQmI,eA9DL,SAAA+E,GACrBhB,GAAa,MA6DkD,GAC3D7B,EAAKtK,OAAS,eAAC,GAAD,CAAmBiG,YAAaA,IAAkB,GAClE,eAAC,GAAD,CAAUa,SAAUA,EAAU9G,OAAQsK,EAAKtK,OAAQ+G,eAnCvD,SAAwB2H,EAAOC,GACzBA,IAAa7H,GACjB6D,EAAYgE,IAkCR1I,YAAaA,EAAagB,iBA7RhC,WACMD,EACF+C,GAAOf,GAEPD,GAAKC,IAyR2DhC,WAAYA,EAAYG,YAAY,IACpG,sBAAKrB,UAAU,aAAf,SAA6BwE,EAAK1K,MAAMC,OAAS,MAAQyK,EAAK1K,MAAME,QACvD,IAAZ8K,EAAgB,sBAAK9E,UAAU,WAAWC,QA1C3B,SAAAoH,GAClBS,EAAQ,eACR/C,EAAW,IAwCQ,SAAgD,sBAAK/E,UAAU,cAAf,SAA6B,kCAAQ,+BACpG,uBAAMA,UAAU,OAAY,uBAAMA,UAAU,SAAc,uBAAMA,UAAU,OAAhB,0CAA6E,GACxIwE,EAAKnK,SAAW,sBAAK2F,UAAU,WAAf,SAA2BwE,EAAKnK,WAAkB,GAClEmK,EAAKpK,KAAO,sBAAK4F,UAAU,cAAqB,GACjD,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAG,SAAStL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,UACtG,KAEN,sBAAK3I,UAAU,eAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAG,SAAStL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,UACtG,KAEN,sBAAK3I,UAAU,eAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAG,SAAStL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,UACtG,QAGR,uBAAK3I,UAAU,MAAf,UACE,sBAAKA,UAAU,8BAAf,SACGwE,EAAK9K,SAAS6E,OAAS,EAAIiG,EAAK9K,SAASmJ,KAAI,SAACrC,EAAMlC,GACjD,OAAO,eAAC,GAAD,CAAa3D,IAAKL,GAAYK,IAA2BsL,GAAI,YAAc3H,EAAG0B,UAAU,WAAWuC,MAAO,CAACiG,UAAW,IAAW,EAAJlK,EAAS,KAAMmK,WAAY,IAAMnK,EAAI,KAAMoK,SAAU,YAAa9I,IAAI,OAAO+I,UAAU,SAA5K,YAAcrK,MAE7D,KAEN,eAAC+J,EAAD,IACA,sBAAKrI,UAAU,8BAAf,SACGwE,EAAK/K,OAAO8E,OAAS,EAAIiG,EAAK/K,OAAOoJ,KAAI,SAACrC,EAAMlC,GAC7C,OAAO,eAAC,GAAD,CAAa3D,IAAKL,GAAYK,IAAyBsL,GAAI,UAAY3H,EAAG0B,UAAU,WAAWuC,MAAO,CAACiG,UAAW,IAAW,EAAJlK,EAAS,KAAMmK,WAAY,IAAMnK,EAAI,KAAMoK,SAAU,YAAa9I,IAAI,OAAO+I,UAAU,SAAxK,UAAYrK,MAE3D,QAGR,uBAAK0B,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAI,SAAUtL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,QAAQ1I,QAASmI,IACzH,KAEN,sBAAKpI,UAAU,kBAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAI,SAAUtL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,QAAQ1I,QAASmI,IACxH,KAEP,sBAAKpI,UAAU,kBAAf,SACGwE,EAAK3K,MAAM,GACZ,eAAC,GAAD,CAAaoM,GAAI,SAAUtL,IAAK6J,EAAK3K,MAAM,GAAGc,IAAKqF,UAAU,0BAA0BJ,IAAI,OAAO+I,UAAU,QAAQ1I,QAASmI,IACzH,WAxDI,MEjUlBU,IAASC,OAKL,eAAC,IAAD,UACE,gBAAC,IAAD,WAEE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIF,OAAS,SAAC7I,GAAU,OAAO,eAAC,GAAD,eAAgBA,OACjE,eAAC,IAAD,CAAUgJ,KAAK,IAAIC,GAAG,IAAIJ,OAAS,SAAC7I,GAAU,OAAO,eAAC,GAAD,eAAgBA,YAK3EiD,SAAS0D,eAAe,W","file":"static/js/main.c417c9a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1C.1048c60e.png\";","export default __webpack_public_path__ + \"static/media/2C.2fe3f08c.png\";","export default __webpack_public_path__ + \"static/media/3C.740490f6.png\";","export default __webpack_public_path__ + \"static/media/4C.03a77942.png\";","export default __webpack_public_path__ + \"static/media/5C.558517b0.png\";","export default __webpack_public_path__ + \"static/media/6C.3620f833.png\";","export default __webpack_public_path__ + \"static/media/7C.14a56224.png\";","export default __webpack_public_path__ + \"static/media/8C.a8bc06d1.png\";","export default __webpack_public_path__ + \"static/media/9C.6965773f.png\";","export default __webpack_public_path__ + \"static/media/10C.9ed3d91b.png\";","export default __webpack_public_path__ + \"static/media/11C.81c29a17.png\";","export default __webpack_public_path__ + \"static/media/12C.7c55d850.png\";","export default __webpack_public_path__ + \"static/media/13C.789e8068.png\";","export default __webpack_public_path__ + \"static/media/1D.f3b345b1.png\";","export default __webpack_public_path__ + \"static/media/2D.ee39c7dc.png\";","export default __webpack_public_path__ + \"static/media/3D.e8d502dd.png\";","export default __webpack_public_path__ + \"static/media/4D.6198dfa5.png\";","export default __webpack_public_path__ + \"static/media/5D.0eeb59f1.png\";","export default __webpack_public_path__ + \"static/media/6D.d9bad49c.png\";","export default __webpack_public_path__ + \"static/media/7D.230fd8a6.png\";","export default __webpack_public_path__ + \"static/media/8D.f364d555.png\";","export default __webpack_public_path__ + \"static/media/9D.a24056d5.png\";","export default __webpack_public_path__ + \"static/media/10D.7ae9eea7.png\";","export default __webpack_public_path__ + \"static/media/11D.66d734e6.png\";","export default __webpack_public_path__ + \"static/media/12D.028ad7d4.png\";","export default __webpack_public_path__ + \"static/media/13D.2e5ab483.png\";","export default __webpack_public_path__ + \"static/media/1H.cc5001d4.png\";","export default __webpack_public_path__ + \"static/media/2H.44b256f0.png\";","export default __webpack_public_path__ + \"static/media/3H.ec26afbd.png\";","export default __webpack_public_path__ + \"static/media/4H.5c782cf1.png\";","export default __webpack_public_path__ + \"static/media/5H.89ec1438.png\";","export default __webpack_public_path__ + \"static/media/6H.490e85cf.png\";","export default __webpack_public_path__ + \"static/media/7H.e131e73a.png\";","export default __webpack_public_path__ + \"static/media/8H.ebac5b45.png\";","export default __webpack_public_path__ + \"static/media/9H.21b32cac.png\";","export default __webpack_public_path__ + \"static/media/10H.4c239d9d.png\";","export default __webpack_public_path__ + \"static/media/11H.28c2c59f.png\";","export default __webpack_public_path__ + \"static/media/12H.4bc634e4.png\";","export default __webpack_public_path__ + \"static/media/13H.3f8b3697.png\";","export default __webpack_public_path__ + \"static/media/1S.4832a80a.png\";","export default __webpack_public_path__ + \"static/media/2S.b0efcac0.png\";","export default __webpack_public_path__ + \"static/media/3S.9c2eae6c.png\";","export default __webpack_public_path__ + \"static/media/4S.8c4d9f8f.png\";","export default __webpack_public_path__ + \"static/media/5S.a4fb9b31.png\";","export default __webpack_public_path__ + \"static/media/6S.2a77a732.png\";","export default __webpack_public_path__ + \"static/media/7S.5275b8fb.png\";","export default __webpack_public_path__ + \"static/media/8S.2d48dd68.png\";","export default __webpack_public_path__ + \"static/media/9S.6b23955c.png\";","export default __webpack_public_path__ + \"static/media/10S.b2e5f800.png\";","export default __webpack_public_path__ + \"static/media/11S.47d62930.png\";","export default __webpack_public_path__ + \"static/media/12S.6ff68c33.png\";","export default __webpack_public_path__ + \"static/media/13S.ee2a7f62.png\";","export default __webpack_public_path__ + \"static/media/purple_back.353e817b.png\";","import C1 from '../assets/images/cards/1C.png';\r\nimport C2 from '../assets/images/cards/2C.png';\r\nimport C3 from '../assets/images/cards/3C.png';\r\nimport C4 from '../assets/images/cards/4C.png';\r\nimport C5 from '../assets/images/cards/5C.png';\r\nimport C6 from '../assets/images/cards/6C.png';\r\nimport C7 from '../assets/images/cards/7C.png';\r\nimport C8 from '../assets/images/cards/8C.png';\r\nimport C9 from '../assets/images/cards/9C.png';\r\nimport C10 from '../assets/images/cards/10C.png';\r\nimport C11 from '../assets/images/cards/11C.png';\r\nimport C12 from '../assets/images/cards/12C.png';\r\nimport C13 from '../assets/images/cards/13C.png';\r\nimport D1 from '../assets/images/cards/1D.png';\r\nimport D2 from '../assets/images/cards/2D.png';\r\nimport D3 from '../assets/images/cards/3D.png';\r\nimport D4 from '../assets/images/cards/4D.png';\r\nimport D5 from '../assets/images/cards/5D.png';\r\nimport D6 from '../assets/images/cards/6D.png';\r\nimport D7 from '../assets/images/cards/7D.png';\r\nimport D8 from '../assets/images/cards/8D.png';\r\nimport D9 from '../assets/images/cards/9D.png';\r\nimport D10 from '../assets/images/cards/10D.png';\r\nimport D11 from '../assets/images/cards/11D.png';\r\nimport D12 from '../assets/images/cards/12D.png';\r\nimport D13 from '../assets/images/cards/13D.png';\r\nimport H1 from '../assets/images/cards/1H.png';\r\nimport H2 from '../assets/images/cards/2H.png';\r\nimport H3 from '../assets/images/cards/3H.png';\r\nimport H4 from '../assets/images/cards/4H.png';\r\nimport H5 from '../assets/images/cards/5H.png';\r\nimport H6 from '../assets/images/cards/6H.png';\r\nimport H7 from '../assets/images/cards/7H.png';\r\nimport H8 from '../assets/images/cards/8H.png';\r\nimport H9 from '../assets/images/cards/9H.png';\r\nimport H10 from '../assets/images/cards/10H.png';\r\nimport H11 from '../assets/images/cards/11H.png';\r\nimport H12 from '../assets/images/cards/12H.png';\r\nimport H13 from '../assets/images/cards/13H.png';\r\nimport S1 from '../assets/images/cards/1S.png';\r\nimport S2 from '../assets/images/cards/2S.png';\r\nimport S3 from '../assets/images/cards/3S.png';\r\nimport S4 from '../assets/images/cards/4S.png';\r\nimport S5 from '../assets/images/cards/5S.png';\r\nimport S6 from '../assets/images/cards/6S.png';\r\nimport S7 from '../assets/images/cards/7S.png';\r\nimport S8 from '../assets/images/cards/8S.png';\r\nimport S9 from '../assets/images/cards/9S.png';\r\nimport S10 from '../assets/images/cards/10S.png';\r\nimport S11 from '../assets/images/cards/11S.png';\r\nimport S12 from '../assets/images/cards/12S.png';\r\nimport S13 from '../assets/images/cards/13S.png';\r\nimport Unknown from '../assets/images/cards/purple_back.png';\r\n\r\nexport const initialState = {\r\n  myDeck: [],\r\n  yourDeck: [],\r\n  mySlop: [],\r\n  yourSlop: [],\r\n  cards: [],\r\n  score: { player: 0, enemy: 0 },\r\n  play: false,\r\n  paused: false,\r\n  stress: false,\r\n  draw: false,\r\n  eventMsg: null,\r\n};\r\n\r\nexport const initialStateTian = {\r\n  piles: [],\r\n  target: [],\r\n  deck: [],\r\n  play: false,\r\n  paused: false,\r\n  eventMsg: null,\r\n  score: { player: 0, enemy: 0 },\r\n}\r\n\r\nexport const initiateCards = [\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n  {\r\n    suits: \"Unknown\",\r\n    card: \"Unknown\",\r\n    color: \"Unknown\",\r\n    index: \"0\",\r\n    src: Unknown,\r\n    cn: \" invisible\",\r\n  },\r\n];\r\nexport const unknownCard = {\r\n  suits: \"Unknown\",\r\n  card: \"Unknown\",\r\n  color: \"Unknown\",\r\n  index: \"0\",\r\n  src: Unknown,\r\n  cn: \" invisible\",\r\n}\r\nexport const deckArray = [\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"1\",\r\n      color: \"red\",\r\n      index: \"1\",\r\n      src: H1,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"2\",\r\n      color: \"red\",\r\n      index: \"2\",\r\n      src: H2,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"3\",\r\n      color: \"red\",\r\n      index: \"3\",\r\n      src: H3,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"4\",\r\n      color: \"red\",\r\n      index: \"4\",\r\n      src: H4,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"5\",\r\n      color: \"red\",\r\n      index: \"5\",\r\n      src: H5,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"6\",\r\n      color: \"red\",\r\n      index: \"6\",\r\n      src: H6,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"7\",\r\n      color: \"red\",\r\n      index: \"7\",\r\n      src: H7,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"8\",\r\n      color: \"red\",\r\n      index: \"8\",\r\n      src: H8,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"9\",\r\n      color: \"red\",\r\n      index: \"9\",\r\n      src: H9,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"10\",\r\n      color: \"red\",\r\n      index: \"10\",\r\n      src: H10,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"11\",\r\n      color: \"red\",\r\n      index: \"11\",\r\n      src: H11,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"12\",\r\n      color: \"red\",\r\n      index: \"12\",\r\n      src: H12,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Heart\",\r\n      card: \"13\",\r\n      color: \"red\",\r\n      index: \"13\",\r\n      src: H13,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"1\",\r\n      color: \"red\",\r\n      index: \"14\",\r\n      src: D1,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"2\",\r\n      color: \"red\",\r\n      index: \"15\",\r\n      src: D2,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"3\",\r\n      color: \"red\",\r\n      index: \"16\",\r\n      src: D3,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"4\",\r\n      color: \"red\",\r\n      index: \"17\",\r\n      src: D4,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"5\",\r\n      color: \"red\",\r\n      index: \"18\",\r\n      src: D5,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"6\",\r\n      color: \"red\",\r\n      index: \"19\",\r\n      src: D6,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"7\",\r\n      color: \"red\",\r\n      index: \"20\",\r\n      src: D7,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"8\",\r\n      color: \"red\",\r\n      index: \"21\",\r\n      src: D8,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"9\",\r\n      color: \"red\",\r\n      index: \"22\",\r\n      src: D9,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"10\",\r\n      color: \"red\",\r\n      index: \"23\",\r\n      src: D10,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"11\",\r\n      color: \"red\",\r\n      index: \"24\",\r\n      src: D11,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"12\",\r\n      color: \"red\",\r\n      index: \"25\",\r\n      src: D12,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Diamond\",\r\n      card: \"13\",\r\n      color: \"red\",\r\n      index: \"26\",\r\n      src: D13,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"1\",\r\n      color: \"black\",\r\n      index: \"27\",\r\n      src: C1,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"2\",\r\n      color: \"black\",\r\n      index: \"28\",\r\n      src: C2,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"3\",\r\n      color: \"black\",\r\n      index: \"29\",\r\n      src: C3,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"4\",\r\n      color: \"black\",\r\n      index: \"30\",\r\n      src: C4,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"5\",\r\n      color: \"black\",\r\n      index: \"31\",\r\n      src: C5,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"6\",\r\n      color: \"black\",\r\n      index: \"32\",\r\n      src: C6,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"7\",\r\n      color: \"black\",\r\n      index: \"33\",\r\n      src: C7,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"8\",\r\n      color: \"black\",\r\n      index: \"34\",\r\n      src: C8,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"9\",\r\n      color: \"black\",\r\n      index: \"35\",\r\n      src: C9,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"10\",\r\n      color: \"black\",\r\n      index: \"36\",\r\n      src: C10,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"11\",\r\n      color: \"black\",\r\n      index: \"37\",\r\n      src: C11,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"12\",\r\n      color: \"black\",\r\n      index: \"38\",\r\n      src: C12,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Club\",\r\n      card: \"13\",\r\n      color: \"black\",\r\n      index: \"39\",\r\n      src: C13,\r\n      cn: \" invisible\",\r\n    }, \r\n    {\r\n      suits: \"Spade\",\r\n      card: \"1\",\r\n      color: \"black\",\r\n      index: \"40\",\r\n      src: S1,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"2\",\r\n      color: \"black\",\r\n      index: \"41\",\r\n      src: S2,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"3\",\r\n      color: \"black\",\r\n      index: \"42\",\r\n      src: S3,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"4\",\r\n      color: \"black\",\r\n      index: \"43\",\r\n      src: S4,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"5\",\r\n      color: \"black\",\r\n      index: \"44\",\r\n      src: S5,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"6\",\r\n      color: \"black\",\r\n      index: \"45\",\r\n      src: S6,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"7\",\r\n      color: \"black\",\r\n      index: \"46\",\r\n      src: S7,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"8\",\r\n      color: \"black\",\r\n      index: \"47\",\r\n      src: S8,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"9\",\r\n      color: \"black\",\r\n      index: \"48\",\r\n      src: S9,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"10\",\r\n      color: \"black\",\r\n      index: \"49\",\r\n      src: S10,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"11\",\r\n      color: \"black\",\r\n      index: \"50\",\r\n      src: S11,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"12\",\r\n      color: \"black\",\r\n      index: \"51\",\r\n      src: S12,\r\n      cn: \" invisible\",\r\n    },\r\n    {\r\n      suits: \"Spade\",\r\n      card: \"13\",\r\n      color: \"black\",\r\n      index: \"52\",\r\n      src: S13,\r\n      cn: \" invisible\",\r\n    }\r\n  ];","import { deckArray } from \"../arrays/cards\";\r\n\r\n\r\nexport const shuffle = async () => {\r\n    let tempDeck = [...deckArray];\r\n    let randomCard;\r\n    let tempX;\r\n    for (let i = tempDeck.length - 1; i > -1; i -= 1) {\r\n      randomCard = Math.floor(Math.random() * i);\r\n      tempX = tempDeck[i];\r\n      tempDeck[i] = tempDeck[randomCard];\r\n      tempDeck[randomCard] = tempX;\r\n    }\r\n    return (tempDeck);\r\n  }\r\n\r\nconst imgCache = {\r\n    __cache: {},\r\n    read(src) {\r\n    if (!this.__cache[src]) {\r\n        this.__cache[src] = new Promise((resolve) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            this.__cache[src] = true;\r\n            resolve(this.__cache[src]);\r\n        };\r\n        img.src = src;\r\n        }).then((img) => {\r\n            this.__cache[src] = true;\r\n        });\r\n    }\r\n    // if (this.__cache[src] instanceof Promise) {\r\n    //   throw this.__cache[src];\r\n    // }\r\n    return this.__cache[src];\r\n    }\r\n};\r\n  \r\nexport const loadCache = (images) => {\r\n    images.forEach((img) => imgCache.read(img));\r\n    return true;\r\n}\r\n\r\nexport const SuspenseImg = ({ src, ...rest }) => {\r\n    imgCache.read(src);\r\n    return <img src={src} {...rest} alt=\"card\"/>;\r\n};","\r\nimport React from 'react';\r\nimport '../assets/css/cards.css';\r\nimport { Route } from 'react-router-dom'\r\nimport { SuspenseImg } from './handleDecks';\r\nimport { unknownCard } from '../arrays/cards';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ChildFriendlyIcon from '@material-ui/icons/ChildFriendly';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\n\r\nexport class InformationTian extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"paused\" onClick={this.props.handlePause}>\r\n        <span className=\"pausedtext\"><h1>Information</h1><h3>Game round</h3>\r\n            Stress is quite special unlike other games. In Stress, both players play at the same time and as fast as they want. Color does not matter in this games.\r\n            <br /><br /><h3>General rules</h3>\r\n            Once the cards in the middle (1 from each deck) are dealt both players can deal their own cards on top of them. But this can only be done if the player's card is a denomination higher or lower than the game stack. So if there is a 4 in one pile and one player has a 5, 6 and a 9 then the player can first put a 5, then a 6. But the player may not add his 9 to the game pile becouse the 9 is not a denomination higher or lower of a 7. Ace counts as 14 and 1 so you can only add it on a king or a 2.\r\n            <br /><br /><h3>Refilling of cards</h3>\r\n            When you lay cards, new cards from the player's deck of cards will move to your action cards.\r\n            <br /><br /><h3>Stress</h3>\r\n            If both cards in the middle have equal numbers a \"STRESS\" button will be displayed at a random position. Hit the button and your enemy will gets both piles added to their deck.\r\n            <br /><br /><h3>Goal</h3>\r\n            To get rid of all your cards first.\r\n            <br /><h2>Click anywhere to unpause.</h2>\r\n            \r\n          <br /><br /> <br /><br /></span>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport class InformationStress extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"paused\" onClick={this.props.handlePause}>\r\n        <span className=\"pausedtext\"><h1>Information</h1><h3>Game round</h3>\r\n            Stress is quite special unlike other games. In Stress, both players play at the same time and as fast as they want. Color does not matter in this games.\r\n            <br /><br /><h3>General rules</h3>\r\n            Once the cards in the middle (1 from each deck) are dealt both players can deal their own cards on top of them. But this can only be done if the player's card is a denomination higher or lower than the game stack. So if there is a 4 in one pile and one player has a 5, 6 and a 9 then the player can first put a 5, then a 6. But the player may not add his 9 to the game pile becouse the 9 is not a denomination higher or lower of a 7. Ace counts as 14 and 1 so you can only add it on a king or a 2.\r\n            <br /><br /><h3>controls</h3>\r\n            Click one of the 3 cards at the bottom. Then click one of the cards in the middle.\r\n            <br /><br /><h3>Refilling of cards</h3>\r\n            When you lay cards, new cards from the player's deck of cards will move to your action cards.\r\n            <br /><br /><h3>Stress</h3>\r\n            If both p in the middle have equal numbers a \"STRESS\" button will be displayed at a random position. Hit the button and your enemy will gets both piles added to their deck.\r\n            <br /><br /><h3>Goal</h3>\r\n            To get rid of all your cards.\r\n            <br /><h2>Click anywhere to unpause.</h2>\r\n          <br /><br /> <br /><br /></span>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport class DeckCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <img id=\"card-3-2\"\r\n        src={this.props.card.src}\r\n        className=\"deckcard\"\r\n        style={{ marginTop: \"-\" + (this.props.length * 2) + \"px\", marginLeft: \"-\" + this.props.length + \"px\", position: \"absolute\" }}\r\n        alt=\"card\" draggable=\"false\"\r\n      />\r\n    )\r\n  }\r\n};\r\n\r\nconst ChangeGameToTian = () => (\r\n  <Route render={({ history }) => (\r\n    <button\r\n      onClick={() => {\r\n        alert(\"That game is not done yet! You have to keep playing stress.\")\r\n        history.push('/tian');\r\n      }}\r\n    >\r\n      Play Tian\r\n    </button>\r\n  )} />\r\n)\r\nconst ChangeGameToStress = () => (\r\n  <Route render={({ history }) => (\r\n    <button\r\n      onClick={() => {\r\n        history.push('/stress');\r\n      }}\r\n    >\r\n      Play Stress\r\n    </button>\r\n  )} />\r\n)\r\n\r\nfunction valueLabelFormat(value) {\r\n  const temp = marks.find(item => item.value === value)\r\n  return temp.label;\r\n}\r\n\r\nconst marks = [\r\n  { value: 1, label: 'Easy', },\r\n  { value: 2, label: 'Medium', },\r\n  { value: 3, label: 'Hard', },\r\n  { value: 4, label: 'Scary', },\r\n];\r\nconst useStyles = makeStyles({\r\n  customslider: {\r\n        width: 234,\r\n        color: \"white\",\r\n        display: \"inline-block\",\r\n    },\r\n});\r\nexport const CardMenu = (props) => {\r\n  const { botLevel, handleBotLevel, fullscreen, toggleFullScreen, paused, handlePause, stressGame } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"cardmenu\">\r\n      {/* <button onClick={showReport}>{\"my s: \" + deck.mySlop.length + \" your s: \" + deck.yourSlop.length + \" my: \" + deck.myDeck.length + \" y: \" + deck.yourDeck.length +\r\n          \" c: \" + deck.cards.length + \" total: \" + (deck.mySlop.length + deck.yourSlop.length + deck.myDeck.length + deck.yourDeck.length + deck.cards.length)}</button> */}\r\n      <div className={classes.customslider}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ChildFriendlyIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={botLevel}\r\n              onChange={handleBotLevel}\r\n              aria-labelledby=\"continuous-slider\"\r\n              valueLabelFormat={valueLabelFormat}\r\n              valueLabelDisplay=\"auto\"\r\n              min={1}\r\n              max={4}\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FlashOnIcon />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div></div>\r\n      <button className={fullscreen ? \"btnpressed\" : \"\"} onClick={toggleFullScreen}>Fullscreen</button>\r\n      <button className={paused ? \"btnpressed btnpaused\" : \"\"} onClick={handlePause}>Information</button>\r\n      {/* {stressGame ? <ChangeGameToTian /> : <ChangeGameToStress />} */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// function Pull(props) {\r\n//   const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\r\n//   const bind = useGesture(({ down, delta, velocity }) => {\r\n//     velocity = clamp(velocity, 1, 8)\r\n//     set({ xy: down ? delta : [0, 0], config: { mass: velocity, tension: 500 * velocity, friction: 50 } })\r\n//   })\r\n//   return <animated.div {...bind()} className={\"deckcard\"} style={{marginLeft: props.left + \"px\", backgroundImage: 'url(' + props.src + ')', transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`) }}>\r\n//           {/* <img src={props.src} {...props.rest}/> */}\r\n//       </animated.div>\r\n// }\r\n// export const SuspenseImg = ({ src, movable, ...rest }) => {\r\n//   imgCache.read(src);\r\n//   console.log(rest);\r\n//   if (movable) {\r\n//       return <Pull src={src} left={rest.style.marginLeft}/>\r\n//   } else {\r\n//       return <img src={src} className ={\"deckcard\"} style={rest.style}/>\r\n//   };\r\n// };\r\n\r\nexport function Pile(defaultProps) {\r\n  const { nr, pile, drag, enemy, myPile } = defaultProps;\r\n  if (pile.length < 1) return null;\r\n\r\n  if (myPile) {\r\n    return pile.map((item, i) => {\r\n      return <SuspenseImg\r\n        src={item.src}\r\n        key={\"pile-\" + nr + \"-\" + i}\r\n        id={\"pile-\" + nr + \"-\" + i}\r\n        className={\"deckcard\"}\r\n        style={{ marginLeft: (i * 24) + \"px\", positon: \"absolute\" }}\r\n        alt=\"card\"\r\n        draggable=\"false\"\r\n        onClick={drag}\r\n      />\r\n    })\r\n  } else {\r\n    return pile.map((item, i) => {\r\n      if (drag && i !== 0) {\r\n        return <SuspenseImg\r\n          src={item.src}\r\n          key={\"pile-\" + nr + \"-\" + i}\r\n          id={\"pile-\" + nr + \"-\" + i}\r\n          className={\"deckcard\"}\r\n          style={{ marginLeft: (i < 2 ? 0 : i * 8) + \"px\", positon: \"absolute\" }}\r\n          alt=\"card\"\r\n          draggable=\"false\"\r\n          onClick={drag}\r\n        />\r\n      } else {\r\n        return <SuspenseImg\r\n          src={i === 0 || enemy ? unknownCard.src : item.src}\r\n          key={\"pile-\" + nr + \"-\" + i}\r\n          id={\"pile-\" + nr + \"-\" + i}\r\n          className={\"deckcard\"}\r\n          style={{ marginLeft: (i < 2 && !enemy ? 0 : i * 8) + \"px\", positon: \"absolute\" }}\r\n          alt=\"card\"\r\n          draggable=\"false\"\r\n          onClick={drag}\r\n        />\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\n// export class Pile extends React.Component {\r\n//   render() {\r\n//     return (<>\r\n//       {this.props.pile.length > 0 ? this.props.pile.map((item, i) => {\r\n//         if (this.props.drag && i !== 0) {\r\n//           return <SuspenseImg src={item.src} key={\"pile-\" + this.props.nr + \"-\" + i} id={\"pile-\" + this.props.nr + \"-\" + i} className=\"deckcard move invisible\" style={{ marginLeft: (i * 8) + \"px\", positon: \"absolute\"}} alt=\"card\" draggable=\"true\" onDragStart={this.props.drag} onClick={this.props.drag} />\r\n//         } else {\r\n//           return <SuspenseImg src={i === 0 || this.props.enemy ? unknownCard.src : item.src} key={\"pile-\" + this.props.nr + \"-\" + i} id={\"pile-\" + this.props.nr + \"-\" + i} className=\"deckcard move invisible\" style={{ marginLeft: (i * 8) + \"px\", positon: \"absolute\"}} alt=\"card\" draggable=\"false\" />\r\n//         }\r\n//       })\r\n//         : \"\"}\r\n//     </>)\r\n//   }\r\n// };\r\n\r\nexport class MyPile extends React.Component {\r\n  render() {\r\n    return (<>\r\n      {this.props.pile.length > 0 ? this.props.pile.map((item, i) => {\r\n        return <SuspenseImg\r\n          src={item.src}\r\n          key={\"pile-\" + this.props.nr + \"-\" + i}\r\n          id={\"pile-\" + this.props.nr + \"-\" + i}\r\n          className=\"deckcard move invisible\"\r\n          style={{\r\n            marginLeft: (i * 24) + \"px\",\r\n            positon: \"absolute\"\r\n          }}\r\n          alt=\"card\"\r\n          // draggable=\"true\" \r\n          // onDragStart={this.props.drag} \r\n          onClick={this.props.drag}\r\n        />\r\n      })\r\n        : \"\"}\r\n    </>)\r\n  }\r\n};\r\n\r\nexport class Target extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"card-target\"\r\n        className=\"card-element target\"\r\n        onDrop={this.props.drop}\r\n        onDragOver={this.props.allowDrop}\r\n        onClick={this.props.drop}>\r\n        {this.props.target.length > 0 ? this.props.target.map((item, i) => {\r\n          return <SuspenseImg\r\n            src={item.src}\r\n            key={\"card-target-\" + i}\r\n            className=\"deckcard\"\r\n            style={{ marginTop: \"-\" + (i * 2) + \"px\", marginLeft: \"-\" + i + \"px\" }}\r\n            alt=\"card\"\r\n            draggable=\"false\"\r\n          />\r\n        })\r\n          : \"\"}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport class Stress extends React.Component {\r\n  render() {\r\n    const left = Math.random() * (window.innerWidth - 150);\r\n    const top = Math.random() * (window.innerHeight - 260);\r\n    return (\r\n      <>\r\n        <div className=\"stressBtn\" onClick={this.props.handleMyStress} style={{ left: left + \"px\", top: top + \"px\" }}>S T R E S S</div>\r\n        <img src={unknownCard.src} className=\"spinners top-left\" alt=\"logo\" />\r\n        <img src={unknownCard.src} className=\"spinners top-right\" alt=\"logo\" />\r\n        <img src={unknownCard.src} className=\"spinners bottom-left\" alt=\"logo\" />\r\n        <img src={unknownCard.src} className=\"spinners bottom-right\" alt=\"logo\" />\r\n      </>\r\n    )\r\n  }\r\n};\r\n","\r\nimport { initialState } from '../arrays/cards';\r\n\r\nexport default function stressReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'deck/shuffle':\r\n            return {\r\n                ...state,\r\n                myDeck: action.myDeck,\r\n                yourDeck: action.yourDeck,\r\n                mySlop: [],\r\n                yourSlop: [],\r\n                cards: action.cards,\r\n                play: false,\r\n                eventMsg: null,\r\n                score: {player: state.score.player + action.player, enemy: state.score.enemy + action.enemy}\r\n            }\r\n        case 'deck/putMyCard':\r\n            return {\r\n                ...state,\r\n                mySlop: action.target === 4 ? [...state.mySlop, state.cards[action.target]] : [...state.mySlop],\r\n                yourSlop: action.target === 3 ? [...state.yourSlop, state.cards[action.target]] : [...state.yourSlop],\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === action.lifted) {\r\n                        return state.myDeck[0];\r\n                    } else if (x === action.target) {\r\n                        return state.cards[action.lifted];\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                }),\r\n                myDeck: state.myDeck.slice(1),\r\n            }\r\n        case 'deck/putYourCard':\r\n            return {\r\n                ...state,\r\n                mySlop: action.target === 4 ? [...state.mySlop, state.cards[action.target]] : [...state.mySlop],\r\n                yourSlop: action.target === 3 ? [...state.yourSlop, state.cards[action.target]] : [...state.yourSlop],\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === action.lifted) {\r\n                        return state.yourDeck[0];\r\n                    } else if (x === action.target) {\r\n                        return state.cards[action.lifted];\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                }),\r\n                yourDeck: state.yourDeck.slice(1)\r\n            }\r\n        case 'deck/newDeal':\r\n            return {\r\n                ...state,\r\n                mySlop: state.cards[4] ? [...state.mySlop, state.cards[4]] : [...state.mySlop],\r\n                yourSlop: state.cards[3] ? [...state.yourSlop, state.cards[3]] : [...state.yourSlop],\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === 3) {\r\n                      return state.yourDeck[0];\r\n                    } if (x === 4) {\r\n                        return state.myDeck[0];\r\n                    } else {\r\n                      return item;\r\n                    }\r\n                }),\r\n                draw: true,\r\n                eventMsg: null,\r\n            }\r\n        case 'deck/myStress':\r\n            return {\r\n                ...state,\r\n                yourDeck: [...state.yourDeck, ...state.mySlop, ...state.yourSlop, state.cards[3], state.cards[4]],\r\n                mySlop: [],\r\n                yourSlop: [],\r\n                stress: false,\r\n                play: false,\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === 3 || x === 4) {\r\n                      return null;\r\n                    } else {\r\n                      return item;\r\n                    }\r\n                })\r\n            }\r\n        case 'deck/yourStress':\r\n            return {\r\n                ...state,\r\n                myDeck: [...state.myDeck, ...state.mySlop, ...state.yourSlop, state.cards[3], state.cards[4]],\r\n                mySlop: [],\r\n                yourSlop: [],\r\n                stress: false,\r\n                play: false,\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === 3 || x === 4) {\r\n                      return null;\r\n                    } else {\r\n                      return item;\r\n                    }\r\n                })\r\n            }\r\n        case 'deck/handlePause':\r\n            return {\r\n                ...state,\r\n                paused: !state.paused\r\n            }\r\n        case 'deck/setStress':\r\n            return {\r\n                ...state,\r\n                stress: action.stress\r\n            }\r\n        case 'deck/setEventMsg':\r\n            return {\r\n                ...state,\r\n                play: false,\r\n                eventMsg: action.eventMsg,\r\n            }\r\n        case 'deck/play':\r\n            return {\r\n                ...state,\r\n                play: true,\r\n                draw: false,\r\n                myDeck: state.myDeck.slice(1),\r\n                yourDeck: state.yourDeck.slice(1),\r\n            }\r\n        case 'deck/dealMyCard':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === action.card) {\r\n                        return state.myDeck[0];\r\n                    } else {\r\n                      return item;\r\n                    }\r\n                }),\r\n                myDeck: state.myDeck.slice(1),\r\n            }\r\n        case 'deck/dealYourCard':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((item, x) => {\r\n                    if (x === action.card) {\r\n                        return state.yourDeck[0];\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                }),\r\n                yourDeck: state.yourDeck.slice(1),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export function lock (setFullscreen) {\r\n    // Enter fullscreen\r\n    if (document.documentElement.requestFullscreen) {\r\n        try {\r\n            document.documentElement.requestFullscreen();\r\n            setFullscreen(true);\r\n        } catch {\r\n            document.documentElement.requestFullscreen().then(() => {\r\n                setFullscreen(true);\r\n            }).catch((err) => {\r\n                alert(\"this feature does not work on your device.\")\r\n                console.log(err);\r\n            });\r\n        }\r\n    } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n        setFullscreen(true);\r\n    } else if (document.documentElement.webkitRequestFullscreen) {\r\n        setFullscreen(true);\r\n        document.documentElement.webkitRequestFullscreen();\r\n    } else if (document.documentElement.msRequestFullscreen) {\r\n        document.documentElement.msRequestFullscreen();\r\n        setFullscreen(true);\r\n    } else {\r\n        alert(\"this feature does not work on your device.\")\r\n    }\r\n    // Then lock orientation\r\n    window.screen.orientation.lock(\"portrait\").then((success) => {\r\n        console.log(success)\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n  \r\n  export function unlock (setFullscreen) {\r\n    // Unlock orientation\r\n    window.screen.orientation.unlock();\r\n   \r\n    // Exit full screen\r\n    if (document.exitFullscreen) {\r\n        setFullscreen(false);\r\n        document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n        setFullscreen(false);\r\n        document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n        setFullscreen(false);\r\n        document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n        setFullscreen(false);\r\n        document.msExitFullscreen();\r\n    }\r\n  }","import React from 'react';\r\n\r\nimport '../../assets/css/cards.css';\r\nimport { unknownCard, initialState, deckArray } from '../../arrays/cards';\r\nimport { CardMenu, InformationStress, Stress } from '../../shared/utils';\r\nimport { loadCache, SuspenseImg, shuffle } from '../../shared/handleDecks';\r\nimport stressReducer from '../../reducers/deckSlice';\r\nimport { botAction, useInterval } from './bot';\r\nimport { lock, unlock } from '../../shared/lock-1';\r\n\r\nfunction StressGame() {\r\n  const [deck, dispatch] = React.useReducer(stressReducer, initialState) \r\n  const [liftedCard, setLiftedCard] = React.useState(null);\r\n  const [botLevel, setBotLevel] = React.useState(1);\r\n  const [loading, setLoading] = React.useState(null);\r\n  const [fullscreen, setFullscreen] = React.useState(false);\r\n  \r\n  let cancelled = false;\r\n\r\n  React.useEffect(() => {\r\n    //saves botlevel and score, no need yet\r\n    // var tempPlayer = 0;\r\n    // var tempEnemy = 0;\r\n    // if (localStorage.getItem('stressBot')) {\r\n    //   setBotLevel(localStorage.getItem('stressBot'));\r\n    // }\r\n    // if (localStorage.getItem('stressPlayer') && localStorage.getItem('stressEnemy')) {\r\n    //   tempPlayer = Number(localStorage.getItem('stressPlayer'));\r\n    //   tempEnemy = Number(localStorage.getItem('stressEnemy'));\r\n    // }\r\n    const tempImgs = deckArray.map((item) => {\r\n      return (\r\n        item.src\r\n      )\r\n    });\r\n    tempImgs.push(unknownCard.src);\r\n    loadCache(tempImgs);\r\n    refresh(0,0);\r\n\r\n    //handles leave, no need yet\r\n    // window.addEventListener('beforeunload', alertUser);\r\n    // window.addEventListener('unload', handleEndConcert);\r\n    return () => {\r\n      cancelled = true;\r\n      // window.removeEventListener('beforeunload', alertUser);\r\n      // window.removeEventListener('unload', handleEndConcert);\r\n      //handleEndConcert();\r\n    };\r\n  }, []);\r\n  function toggleFullScreen() {\r\n    if (fullscreen) {\r\n      unlock(setFullscreen);\r\n    } else {\r\n      lock(setFullscreen);\r\n    } \r\n  }\r\n  //validade cards in play for stress, new draw or gameover.\r\n  React.useEffect(() => { \r\n    if (cancelled) return;\r\n    if (deck.play && !deck.stress && !deck.draw && !deck.eventMsg) {\r\n      checkCards(deck.cards);\r\n    }\r\n  }); \r\n\r\n  //Handles leave, no need yet\r\n  // const alertUser = e => {\r\n  //   e.preventDefault()\r\n  //   e.returnValue = ''\r\n  // }\r\n\r\n  // const handleEndConcert = async () => {\r\n  //   localStorage.setItem('stressBot', botLevel);\r\n  //   localStorage.setItem('stressPlayer', deck.score.player);\r\n  //   localStorage.setItem('stressEnemy', deck.score.enemy);\r\n  // }\r\n\r\n  const refresh = (player, enemy) => {\r\n    shuffle().then((result) => {\r\n      if (cancelled) return;\r\n      var tempCards = [unknownCard, unknownCard, unknownCard, null, null, unknownCard, unknownCard, unknownCard];\r\n      var tempDeck1 = result.slice(0, 26);\r\n      var tempDeck2 = result.slice(26,52);\r\n      dispatch({ type: 'deck/shuffle', myDeck: tempDeck1, yourDeck: tempDeck2, cards: tempCards, player: player, enemy: enemy });\r\n    }).then(() => {\r\n      if (cancelled) return;\r\n      setLoading(1);\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 8; i++) {\r\n          if (i === 3) {\r\n            i = 5;\r\n          }\r\n          setTimeout(function() {\r\n            moveCard(i, i < 4 ? \"dealMyCard\" : \"dealYourCard\", \"\");\r\n          }, i * 300);\r\n        }\r\n        setTimeout(() => {\r\n          setLoading(2);\r\n        }, 1800);\r\n      }, 2000);\r\n    })\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (deck.play && !deck.paused && !deck.draw && !deck.eventMsg && deck.cards[3] && deck.cards[4]) {\r\n      botAction(deck.cards, moveCard, handleStress);\r\n    }\r\n  }, botLevel === 1 ? 5000 : botLevel === 2 ? 3700 : botLevel === 3 ? 2400 : botLevel === 4 ? 1200 : 9999);\r\n\r\n  const moveCard = (cardNr, type, target) => {\r\n    console.log(\"moveCard\")\r\n    dispatch({ type: 'deck/' + type, lifted: cardNr, target: target, card: cardNr});\r\n    const temp = document.getElementById(\"card-\" + cardNr);\r\n    if (temp) {\r\n      temp.className = temp.className.concat(' move-' + cardNr).replace(\"invisible\",\"\");\r\n    }\r\n    setTimeout(() => {\r\n      const faked = document.getElementsByClassName(\"move-\" + cardNr);\r\n      if (faked && faked[0]) {\r\n        while(faked.length > 0){\r\n          faked[0].classList.remove('move-' + cardNr);\r\n        }\r\n      }\r\n    }, 90);\r\n  }\r\n\r\n  const drop = (e) => {\r\n    \r\n    console.log(\"drop\");\r\n    e.preventDefault();\r\n    removeFakedHover();\r\n    if (!liftedCard || !deck.play) return;\r\n    var lifted = deck.cards[liftedCard.substr(5, 1)];\r\n    var target = deck.cards[e.target.id.substr(5, 1)];\r\n    if (!target) return;\r\n    var card1 = Number(lifted.card);\r\n    var card2 = Number(target.card);\r\n    if (card1 + 1 === card2 || card1 - 1 === card2 || (card1 === 1 && card2 === 13) || (card1 === 13 && card2 === 1)) {\r\n      moveCard(Number(liftedCard.substr(5, 1)), \"putMyCard\", Number(e.target.id.substr(5, 1)));\r\n    }\r\n  }\r\n\r\n  const checkCards = (list) => {\r\n    //Checks if cards are valid for play or a draw needs to be set up.\r\n\r\n\r\n\r\n    // if (!list[3] || !list[4]) return;\r\n    // var target1 = Number(list[3].card);\r\n    // var target2 = Number(list[4].card);\r\n\r\n\r\n\r\n\r\n    if (!list[3] && !list[4]) return;\r\n    var target1 = Number(list[3].card) || null;\r\n    var target2 = Number(list[4].card) || null;\r\n\r\n\r\n\r\n    \r\n    if (target1 === target2 && target1 !== (undefined || null)) {\r\n      //Stress starts if both targets are the same\r\n      dispatch({ type: 'deck/setStress', stress: true });\r\n      return;\r\n    } else if (deck.stress) {\r\n      dispatch({ type: 'deck/setStress', stress: false });\r\n    }\r\n    let valid = false;  \r\n    for (var i = 0; i < 8; i++) {\r\n      if (i === 3 || i === 4 || !list[i]) continue;\r\n      let card = Number(list[i].card);\r\n      //Checks if any of the players have a card to put on any of the targets\r\n      if (card + 1 === target1   // left is higher\r\n        || card - 1 === target1  // left is lower\r\n        || card + 1 === target2  // right is higher\r\n        || card - 1 === target2  // right is lower\r\n        || (card === 1 && (target1 === 13 || target2 === 13)) // left/right ace on king\r\n        || (card === 13 && (target1 === 1 || target2 === 1))) // left/right king on ace\r\n      {\r\n        //valid cards in play\r\n        valid = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!list[0] && !list[1] && !list[2]) {\r\n      //player have 0 cards left\r\n      gameOver(\"YOU WIN\", {player: 1, enemy: 0});\r\n    } else if (!list[5] && !list[6] && !list[7]) {\r\n      //enemy has 0 cards left\r\n      gameOver(\"EPIC FAIL\", {player: 0, enemy: 1});\r\n    } \r\n    if (!valid) {\r\n      if (deck.myDeck.length < 1 && deck.yourDeck.length < 1) {\r\n        //No valid cards in play and no more cards to draw: undecided victory //%% maybe change to replay?\r\n        gameOver(\"Draw\", {player: 0, enemy: 0});\r\n      } else if (deck.myDeck.length < 1) {\r\n        //no more cards to play and player deck is empty //%% should be changed to take 2 from enemy deck?\r\n        gameOver(\"YOU WIN\", {player: 1, enemy: 0});\r\n      } else if (deck.yourDeck.length < 1) {\r\n        //no more cards to play and enemy deck is empty //%% should be changed to take 2 from player deck?\r\n        gameOver(\"EPIC FAIL\", {player: 0, enemy: 1});\r\n      } else {\r\n        //if no stress, no valid cards and game can still be played, execute new Draw\r\n        newDraw(\"No valid cards\");\r\n      }\r\n    };\r\n  };\r\n\r\n  const gameOver = (msg, score) => {\r\n    if (deck.eventMsg) return;\r\n    dispatch({ type: 'deck/setEventMsg', eventMsg: msg });\r\n    setTimeout(() => {\r\n      for (var i = 0; i < 8; i++) {\r\n        if (i === 3) i = 5;\r\n        const temp = document.getElementById(\"card-\" + i);\r\n        if (temp) {\r\n          temp.className = temp.className.concat(\" invisible\");\r\n        }\r\n      }\r\n      refresh(score.player, score.enemy);\r\n    }, 3000);\r\n  }\r\n\r\n  const handleStress = (me) => {\r\n    if (!deck.stress || !deck.play) return;\r\n    if (me) {\r\n      dispatch({ type: 'deck/myStress' });\r\n      newDraw(\"Success\");\r\n    } else {\r\n      dispatch({ type: 'deck/yourStress' });\r\n      newDraw(\"Fail\");\r\n    }\r\n  }\r\n\r\n  const newDraw = (msg) => {\r\n    dispatch({ type: 'deck/setEventMsg', eventMsg: msg });\r\n    setTimeout(() => {\r\n      dispatch({ type: 'deck/newDeal' });\r\n      setTimeout(() => {\r\n        dispatch({ type: 'deck/play' });\r\n        const temp = document.getElementById(\"card-3-2\")\r\n        const temp2 = document.getElementById(\"card-4-2\")\r\n        if (temp) {\r\n          temp.className = temp.className.concat(' move-3');\r\n        }\r\n        if (temp2) {\r\n          temp2.className = temp2.className.concat(' move-4');\r\n        }\r\n        setTimeout(() => {\r\n          const faked = document.getElementsByClassName(\"move-3\");\r\n          const faked2 = document.getElementsByClassName(\"move-4\");\r\n          if (faked && faked[0]) {\r\n            while(faked.length > 0){\r\n              faked[0].classList.remove('move-3');\r\n            }\r\n          }\r\n          if (faked2 && faked2[0]) {\r\n            while(faked2.length > 0){\r\n              faked2[0].classList.remove('move-4');\r\n            }\r\n          }\r\n        }, 100);\r\n      }, 2600);\r\n    }, 2000);\r\n  }\r\n  \r\n  const handlePause = () => {\r\n    dispatch({ type: 'deck/handlePause' });\r\n  }\r\n  const handleMyStress = e => {\r\n    handleStress(true);\r\n  }\r\n  const allowDrop = (e) => {\r\n    e.preventDefault();\r\n  }\r\n  const removeFakedHover = () => {\r\n    console.log(\"removefakeHover\")\r\n    setLiftedCard(null);\r\n    const faked = document.getElementsByClassName(\"fakedhover\");\r\n    if (faked && faked[0]) {\r\n      while(faked.length > 0){\r\n        faked[0].classList.remove('fakedhover');\r\n      }\r\n    }\r\n  }\r\n  const drag = (e) => {\r\n    console.log(\"drag\");\r\n    removeFakedHover();\r\n    if (e.target.id !== liftedCard) {\r\n      e.target.className = e.target.className.concat(' fakedhover');\r\n      setLiftedCard(e.target.id); \r\n    }\r\n  }\r\n  \r\n  const handleStart = e => {\r\n    newDraw(\"Starting...\");\r\n    setLoading(3);\r\n  }\r\n  function handleBotLevel(event, newValue) {\r\n    if (newValue === botLevel) return;\r\n    setBotLevel(newValue);\r\n  };\r\n  function MiddleCards() {\r\n    const temp = deck;\r\n    return ( \r\n      <>\r\n        <div id=\"card-3-1\" className=\"card-element target\" onDrop={drop} onDragOver={allowDrop} onClick={drop}>\r\n          {temp.yourSlop.length > 0 ? temp.yourSlop.map((item, i) => {\r\n              return <SuspenseImg src={unknownCard.src} key={\"yourslop-\" + i} className=\"deckcard\" style={{marginTop: \"-\" + (i * 2) + \"px\", marginLeft: \"-\" + i + \"px\",position: \"absolute\"}} alt=\"card\" draggable=\"false\" />\r\n            })\r\n            : \"\"}\r\n          {temp.cards[3] && (temp.play || temp.eventMsg) ? \r\n            <SuspenseImg id=\"card-3-2\" src={temp.cards[3].src} className=\"deckcard move\" style={{marginTop: \"-\" + (temp.yourSlop.length * 2) + \"px\", marginLeft: \"-\" + temp.yourSlop.length + \"px\"}} alt=\"card\" draggable=\"false\" />\r\n            : \"\"}\r\n        </div>\r\n        <div id=\"card-4-1\" className=\"card-element target\" onDrop={drop} onDragOver={allowDrop} onClick={drop}>\r\n          {temp.mySlop.length > 0 ? temp.mySlop.map((item, i) => {\r\n              return  <SuspenseImg src={unknownCard.src} key={\"myslop-\" + i} className=\"deckcard\" style={{marginTop: \"-\" + (i * 2) + \"px\", marginLeft: \"-\" + i + \"px\",position: \"absolute\"}} alt=\"card\" draggable=\"false\" />\r\n            })\r\n            : \"\"}\r\n          {temp.cards[4] && (temp.play || temp.eventMsg) ? \r\n            <SuspenseImg id=\"card-4-2\" src={temp.cards[4].src} className=\"deckcard move\" style={{marginTop: \"-\" + (temp.mySlop.length * 2) + \"px\", marginLeft: \"-\" + temp.mySlop.length + \"px\"}} alt=\"card\" draggable=\"false\" />\r\n            : \"\"}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  if (cancelled) return null;\r\n  return (\r\n    <div className=\"container\">\r\n      {!loading ? \"\" : <>\r\n      { deck.stress ? <Stress handleMyStress={handleMyStress} /> : \"\" }\r\n      { deck.paused ? <InformationStress handlePause={handlePause} /> : \"\" }\r\n      <CardMenu botLevel={botLevel} paused={deck.paused} handleBotLevel={handleBotLevel} \r\n        handlePause={handlePause} toggleFullScreen={toggleFullScreen} fullscreen={fullscreen} stressGame={true}/>\r\n      <div className=\"scoreboard\">{deck.score.player + \" - \" + deck.score.enemy}</div>\r\n      {loading === 2 ? <div className=\"startbtn\" onClick={handleStart}><div className=\"startbtndiv\"><button><p>\r\n        <span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Click here to start</span></p></button></div></div> : \"\"}\r\n      {deck.eventMsg ? <div className=\"eventmsg\">{deck.eventMsg}</div> : \"\"}\r\n      {deck.draw ? <div className=\"countdown\"></div> : \"\"}\r\n      <div className=\"row\">\r\n        <div className=\"card-element\">\r\n          {deck.cards[5] ?\r\n          <SuspenseImg id=\"card-5\" src={deck.cards[5].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" />\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"card-element\">\r\n          {deck.cards[6] ?\r\n          <SuspenseImg id=\"card-6\" src={deck.cards[6].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" />\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"card-element\">\r\n          {deck.cards[7] ?\r\n          <SuspenseImg id=\"card-7\" src={deck.cards[7].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" />\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"deck card-element sidedecks\">\r\n          {deck.yourDeck.length > 0 ? deck.yourDeck.map((item, i) => {\r\n              return <SuspenseImg src={unknownCard.src} key={\"yourdeck-\" + i} id={\"yourdeck-\" + i} className=\"deckcard\" style={{marginTop: \"-\" + (i * 2) + \"px\", marginLeft: \"-\" + i + \"px\", position: \"absolute\"}} alt=\"card\" draggable=\"false\" />\r\n            })\r\n            : \"\"}\r\n        </div>\r\n        <MiddleCards/>\r\n        <div className=\"deck card-element sidedecks\">\r\n          {deck.myDeck.length > 0 ? deck.myDeck.map((item, i) => {\r\n              return <SuspenseImg src={unknownCard.src} key={\"mydeck-\" + i} id={\"mydeck-\" + i} className=\"deckcard\" style={{marginTop: \"-\" + (i * 2) + \"px\", marginLeft: \"-\" + i + \"px\", position: \"absolute\"}} alt=\"card\" draggable=\"false\" />\r\n            })\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"card-element my\">\r\n          {deck.cards[0] ?\r\n          <SuspenseImg id={\"card-0\"} src={deck.cards[0].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" onClick={drag} />\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"card-element my\">\r\n          {deck.cards[1] ?\r\n          <SuspenseImg id={\"card-1\"} src={deck.cards[1].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" onClick={drag} />\r\n             : \"\"} \r\n        </div>\r\n        <div className=\"card-element my\">\r\n          {deck.cards[2] ?\r\n          <SuspenseImg id={\"card-2\"} src={deck.cards[2].src} className=\"deckcard move invisible\" alt=\"card\" draggable=\"false\" onClick={drag} />\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      </> } \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StressGame;","import React from 'react';\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = React.useRef();\r\n\r\n  // Remember the latest callback.\r\n  React.useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport const botAction = (cards, moveCard, handleStress) => {\r\n  var target1 = null;\r\n  var target2 = null;\r\n  if (cards[3]) target1 = Number(cards[3].card);\r\n  if (cards[4]) target2 = Number(cards[4].card);\r\n  if (target1 === null) return;\r\n  if (target1 === target2) {\r\n    setTimeout(() => {\r\n      handleStress(false);\r\n    }, 300);\r\n  } else {\r\n    let found;\r\n    for (var i = 5; i < 8; i++) {\r\n      if (!cards[i]) continue;\r\n      let temp = Number(cards[i].card);\r\n      if (temp + 1 === target1 || temp - 1 === target1 || (temp === 1 && target1 === 13) || (temp === 13 && target1 === 1)) {\r\n        found = 3;\r\n        break;\r\n      } else if (temp + 1 === target2 || temp - 1 === target2 || (temp === 1 && target2 === 13) || (temp === 13 && target2 === 1)) {\r\n        found = 4;\r\n        break;\r\n      }\r\n    };\r\n    if (found) {\r\n      moveCard(i, \"putYourCard\", found);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport './index.css';\r\nimport StressGame from './views/stress/StressGame';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport TianGame from './views/tian/TianGame';\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  // document.getElementById('root')\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {/* <Route exact path=\"/tian\" render= {(props)=>{ return <TianGame {...props}/>}} /> */}\r\n        <Route exact path=\"/\" render= {(props)=>{ return <StressGame {...props}/>}}/>\r\n        <Redirect from=\"*\" to=\"/\" render= {(props)=>{ return <StressGame {...props}/>}}/> \r\n        {/* <Route path=\"/admin\" render={(props) => <Layout {...props} />} />\r\n        <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\r\n      </Switch>\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals(console.log);\r\n"],"sourceRoot":""}